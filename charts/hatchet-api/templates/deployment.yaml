apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "hatchet.fullname" . }}
  labels:
{{- include "hatchet.labels" . | nindent 4 }}
{{- if .Values.deployment.annotations }}
  annotations:
{{ toYaml .Values.deployment.annotations | indent 4 }}
{{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
{{- include "hatchet.selectorLabels" . | nindent 6 }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  template:
    metadata:
      annotations:
{{- if .Values.podAnnotations }}
{{ toYaml .Values.podAnnotations | indent 8 }}
{{- end }}
{{- if .Values.deployment.annotations }}
{{ toYaml .Values.deployment.annotations | indent 8 }}
{{- end }}
      labels:
{{- include "hatchet.selectorLabels" . | nindent 8 }}
{{- if .Values.podLabels }}
{{ toYaml .Values.podLabels | indent 8 }}
{{- end }}
{{- if .Values.deployment.labels }}
{{ toYaml .Values.deployment.labels | indent 8 }}
{{- end }}
    spec:
      serviceAccountName: {{ template "hatchet.serviceAccountName" . }}
      {{- if .Values.priorityClassName }}
      priorityClassName: "{{ .Values.priorityClassName }}"
      {{- end }}
      initContainers:
        - name: rabbitmq-init
          image: busybox:1.36
          command:
            - sh
            - -c
            - |
              echo "üîé Checking RabbitMQ connectivity..."
              until nc -z -w5 hatchet-ha-rabbitmq 5672; do
                echo "‚ùå Failed to connect to RabbitMQ. Retrying in 5s..."
                sleep 5
              done
              echo "‚úÖ Successfully connected to RabbitMQ on hatchet-ha-rabbitmq:5672"
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ required "Please set a value for .Values.image.tag" .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command: {{ .Values.commandline.command }}
        {{- if .Values.commandline.args }}
        args:
{{ toYaml .Values.commandline.args | indent 10 }}
        {{- else }}
        args: []
        {{- end }}
        env:
        {{- range $key, $value := .Values.env }}
        - name: "{{ $key }}"
          value: "{{ $value }}"
        {{- end }}
        envFrom:
{{ toYaml .Values.deploymentEnvFrom | nindent 10 }}
{{- if .Values.envFrom }}
{{ toYaml .Values.envFrom | nindent 10 }}
{{- end }}
        ports:
        - containerPort: {{ .Values.service.internalPort }}
          name: {{ template "hatchet.name" . }}
          protocol: TCP
        resources:
{{ toYaml .Values.resources | indent 10 }}
        volumeMounts:
{{- if .Values.extraVolumeMounts }}
{{ toYaml .Values.extraVolumeMounts | indent 8 }}
{{- end }}
{{- range .Values.extraConfigMapMounts }}
        - name: {{ .name }}
          mountPath: {{ .mountPath }}
          subPath: {{ .subPath }}
{{- end }}
{{- if .Values.health.enabled }}
{{ toYaml .Values.health.spec | indent 8 }}
{{- end }}
{{- if .Values.cloudSQLSidecar.enabled }}
      - name: cloud-sql-proxy
        image: gcr.io/cloud-sql-connectors/cloud-sql-proxy:2.1.0
        args:
        - "--private-ip"
        - "--structured-logs"
        - "--port=5432"
        - "{{ .Values.cloudSQLSidecar.address }}"
        securityContext:
          runAsNonRoot: true
        resources:
{{ toYaml .Values.cloudSQLSidecar.resources | indent 10 }}
{{- end }}
{{- with .Values.extraContainers }}
{{ toYaml . | indent 6 }}
{{- end }}
    {{- if .Values.image.pullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.image.pullSecrets | indent 8 }}
    {{- end }}
    {{- if .Values.affinity }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
    {{- end }}
    {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
    {{- end }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
{{- if .Values.securityContext.enabled }}
      securityContext:
        runAsUser: {{ .Values.securityContext.runAsUser }}
        fsGroup: {{ .Values.securityContext.fsGroup }}
{{- end }}
      volumes:
{{- if .Values.extraVolumes }}
{{ toYaml .Values.extraVolumes | indent 8 }}
{{- end }}
---
{{- if .Values.podDisruptionBudget }}
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: {{ template "hatchet.fullname" . }}
spec:
  {{ toYaml .Values.podDisruptionBudget }}
  selector:
    matchLabels:
  {{- include "hatchet.selectorLabels" . | nindent 6 }}
{{- end }}
